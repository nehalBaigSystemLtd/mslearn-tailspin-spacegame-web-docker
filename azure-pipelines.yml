trigger:
- azpipe

variables:
  tag: '$(Build.BuildId)'
  containerRegistry: 'azpipecr'
  repository: 'azcr'
  ResourceGroup: 'azpipe'
pool:
     vmImage: 'windows-latest'
stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: DotNet 
    displayName: DotNet Build and Test   
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: 'Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj'
        arguments: '-c Release -o $(Build.SourcesDirectory)/app/build'
        zipAfterPublish: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: 'Tailspin.SpaceGame.Web/*.csproj'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '-c Release -o $(Build.SourcesDirectory)/app/publish'
        zipAfterPublish: true
    
  - job: Docker
    displayName: Build And Push Docker job 
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: $(containerRegistry)
        repository: $(repository)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: $(tag)
  
